import java.util.*;
public class Solution {
    public static int f(int i, int k, int []height, int []dp){
        if (i == 0) return 0;
        if (dp[i] != -1) return dp[i];
        int mini = Integer.MAX_VALUE;
        for (int j = 1; j <= k; j++){
            if (i - j >= 0){
                int cost = Math.abs(height[i] - height[i-j]) + f(i-j, k, height, dp);
                mini = Math.min(mini, cost);
            }
        }
        return dp[i] = mini;
    }
    public static int minimizeCost(int n, int k, int []height){
        int dp[] = new int[n+1];
        Arrays.fill(dp, -1);
        return f(n-1,k,height,dp);
    }
}
